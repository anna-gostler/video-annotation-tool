{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anna_\\\\azuretest\\\\annotation-tool\\\\src\\\\Slider.jsx\";\nimport React from 'react';\n\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSliderInput = event => {\n      if (event.type === \"mousedown\" || event.type === \"mouseup\") {\n        console.log(\"test: mouse down/up\");\n      } else {\n        //TODO: on down: register start pos\n        var clickPosX = event.pageX;\n        console.log(\"handle slider input\"); // 1. change framenumber\n        // 2. update image\n\n        var sliderWidth = ReactDOM.findDOMNode(this).getElementsByClassName('slidecontainer')[0].offsetWidth - 25;\n        console.log('event.target.value = ' + clickPosX);\n        console.log('sliderWidth = ' + sliderWidth);\n        console.log(\"(sliderWidth/100) = \" + sliderWidth / 100);\n        console.log(\"Math.max(event.target.value-3,2) = \" + Math.max(clickPosX - 3, 2));\n        console.log(\"result = \" + sliderWidth / 100 * Math.max(clickPosX - 3, 2) + \"px\"); //TODO: on move: register offset from start pos\n        //TODO: on up: update frame no depending on offset\n\n        this.setState({//frameNumber: clickPosX,\n          //frameNumberStyle: {\n          //  position: \"relative\",\n          //  left: ((sliderWidth/100) * (clickPosX-1)) + 3 + \"px\",\n          //}\n        }, () => {\n          this.setState({\n            imagesrc: this.getFrame()\n          });\n        });\n      }\n    };\n\n    this.state = {\n      clickPosX: undefined,\n      //TODO put where?\n      selectedStyle: {\n        backgroundColor: \"blue\",\n        width: \"0%\",\n        height: \"20px\"\n      },\n      bgStyle: {\n        backgroundColor: \"#dedede\",\n        // light gray\n        width: \"100%\",\n        height: \"20px\"\n      },\n      trackedStyle: {\n        backgroundColor: \"light-blue\",\n        width: \"0%\",\n        height: \"20px\"\n      },\n      thumbStyle: {//height: \"20px\",\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: this.state.bgStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"Thumb\",\n      className: \"slidecontainer\",\n      style: this.state.thumbStyle,\n      onMouseDown: this.props.handleSliderInput,\n      onMouseUp: this.props.handleSliderInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.state.frameNumber)));\n  }\n\n}\n\nexport default Slider;","map":{"version":3,"sources":["C:/Users/anna_/azuretest/annotation-tool/src/Slider.jsx"],"names":["React","Slider","Component","constructor","props","handleSliderInput","event","type","console","log","clickPosX","pageX","sliderWidth","ReactDOM","findDOMNode","getElementsByClassName","offsetWidth","Math","max","setState","imagesrc","getFrame","state","undefined","selectedStyle","backgroundColor","width","height","bgStyle","trackedStyle","thumbStyle","render","frameNumber"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAN,SAAqBD,KAAK,CAACE,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAyBnBC,iBAzBmB,GAyBEC,KAAD,IAAW;AAE3B,UAAIA,KAAK,CAACC,IAAN,KAAe,WAAf,IAA8BD,KAAK,CAACC,IAAN,KAAe,SAAjD,EAA4D;AAC1DC,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,OAFD,MAEK;AAEH;AACA,YAAIC,SAAS,GAAGJ,KAAK,CAACK,KAAtB;AAEAH,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EALG,CAMH;AACA;;AACA,YAAIG,WAAW,GAAIC,QAAQ,CAACC,WAAT,CAAqB,IAArB,EAA2BC,sBAA3B,CAAkD,gBAAlD,EAAoE,CAApE,EAAuEC,WAAvE,GAAqF,EAAxG;AACAR,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BC,SAAtC;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBG,WAA/B;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAA0BG,WAAW,GAAC,GAAlD;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAY,wCAAyCQ,IAAI,CAACC,GAAL,CAASR,SAAS,GAAC,CAAnB,EAAqB,CAArB,CAArD;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAgBG,WAAW,GAAC,GAAb,GAAoBK,IAAI,CAACC,GAAL,CAASR,SAAS,GAAC,CAAnB,EAAqB,CAArB,CAAnC,GAA8D,IAA1E,EAbG,CAeH;AAGA;;AACA,aAAKS,QAAL,CAAc,CACZ;AACA;AACA;AACA;AACA;AALY,SAAd,EAMG,MAAM;AACP,eAAKA,QAAL,CAAc;AACZC,YAAAA,QAAQ,EAAE,KAAKC,QAAL;AADE,WAAd;AAGD,SAVD;AAWD;AACF,KA5DgB;;AAEjB,SAAKC,KAAL,GAAa;AACXZ,MAAAA,SAAS,EAAEa,SADA;AACW;AACtBC,MAAAA,aAAa,EAAE;AACbC,QAAAA,eAAe,EAAE,MADJ;AAEbC,QAAAA,KAAK,EAAE,IAFM;AAGbC,QAAAA,MAAM,EAAE;AAHK,OAFJ;AAOXC,MAAAA,OAAO,EAAE;AACPH,QAAAA,eAAe,EAAE,SADV;AACqB;AAC5BC,QAAAA,KAAK,EAAE,MAFA;AAGPC,QAAAA,MAAM,EAAE;AAHD,OAPE;AAYXE,MAAAA,YAAY,EAAE;AACZJ,QAAAA,eAAe,EAAE,YADL;AAEZC,QAAAA,KAAK,EAAE,IAFK;AAGZC,QAAAA,MAAM,EAAE;AAHI,OAZH;AAiBXG,MAAAA,UAAU,EAAE,CACV;AADU;AAjBD,KAAb;AAqBD;;AAuCDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,KAAK,EAAI,KAAKT,KAAL,CAAWM,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAC,OAAR;AAAgB,MAAA,SAAS,EAAC,gBAA1B;AAA2C,MAAA,KAAK,EAAI,KAAKN,KAAL,CAAWQ,UAA/D;AAA2E,MAAA,WAAW,EAAI,KAAK1B,KAAL,CAAWC,iBAArG;AAAwH,MAAA,SAAS,EAAI,KAAKD,KAAL,CAAWC,iBAAhJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKiB,KAAL,CAAWU,WAAf,CADF,CADF,CADF;AAOD;;AAvEgC;;AA0EnC,eAAe/B,MAAf","sourcesContent":["import React from 'react';\r\n\r\nclass Slider extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        clickPosX: undefined, //TODO put where?\r\n        selectedStyle: {\r\n          backgroundColor: \"blue\",\r\n          width: \"0%\",\r\n          height: \"20px\",\r\n        },\r\n        bgStyle: {\r\n          backgroundColor: \"#dedede\", // light gray\r\n          width: \"100%\",\r\n          height: \"20px\",\r\n        },\r\n        trackedStyle: {\r\n          backgroundColor: \"light-blue\",\r\n          width: \"0%\",\r\n          height: \"20px\",\r\n        },\r\n        thumbStyle: {\r\n          //height: \"20px\",\r\n        },\r\n      };\r\n    }\r\n\r\n    handleSliderInput = (event) => {\r\n\r\n        if (event.type === \"mousedown\" || event.type === \"mouseup\" ){\r\n          console.log(\"test: mouse down/up\")\r\n        }else{\r\n           \r\n          //TODO: on down: register start pos\r\n          var clickPosX = event.pageX; \r\n    \r\n          console.log(\"handle slider input\")\r\n          // 1. change framenumber\r\n          // 2. update image\r\n          var sliderWidth =  ReactDOM.findDOMNode(this).getElementsByClassName('slidecontainer')[0].offsetWidth - 25;\r\n          console.log('event.target.value = ' + clickPosX)\r\n          console.log('sliderWidth = ' + sliderWidth)\r\n          console.log(\"(sliderWidth/100) = \" + (sliderWidth/100))\r\n          console.log(\"Math.max(event.target.value-3,2) = \" +  Math.max(clickPosX-3,2))\r\n          console.log(\"result = \" + ((sliderWidth/100) * Math.max(clickPosX-3,2)) + \"px\")\r\n    \r\n          //TODO: on move: register offset from start pos\r\n      \r\n      \r\n          //TODO: on up: update frame no depending on offset\r\n          this.setState({\r\n            //frameNumber: clickPosX,\r\n            //frameNumberStyle: {\r\n            //  position: \"relative\",\r\n            //  left: ((sliderWidth/100) * (clickPosX-1)) + 3 + \"px\",\r\n            //}\r\n          }, () => {\r\n            this.setState({\r\n              imagesrc: this.getFrame(),\r\n            });\r\n          });\r\n        }\r\n      }\r\n  \r\n    render() {\r\n      return(\r\n        <div style = {this.state.bgStyle}>\r\n          <div id=\"Thumb\" className=\"slidecontainer\" style = {this.state.thumbStyle} onMouseDown = {this.props.handleSliderInput} onMouseUp = {this.props.handleSliderInput}>\r\n            <p>{this.state.frameNumber}</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default Slider;"]},"metadata":{},"sourceType":"module"}