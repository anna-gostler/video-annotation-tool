{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anna_\\\\azuretest\\\\annotation-tool\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom'; // color scheme https://www.schemecolor.com/coral-blue.php\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(FrameArea, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }));\n  }\n\n} // area shows the video and is the region where the bounding-box(es)\n// can be moved \n\n\nclass FrameArea extends React.Component {\n  constructor(props) {\n    super(props); // 100 = number of images\n    // add empty bbox [0,0,0,0] for every frame\n\n    this.handleSliderInput = event => {\n      if (event.type === \"mousedown\" || event.type === \"mouseup\") {\n        console.log(\"test: mouse down/up\");\n      } else {\n        //TODO: on down: register start pos\n        var clickPosX = event.pageX;\n        console.log(\"handle slider input\"); // 1. change framenumber\n        // 2. update image\n\n        var sliderWidth = ReactDOM.findDOMNode(this).getElementsByClassName('slidecontainer')[0].offsetWidth - 25;\n        console.log('event.target.value = ' + clickPosX);\n        console.log('sliderWidth = ' + sliderWidth);\n        console.log(\"(sliderWidth/100) = \" + sliderWidth / 100);\n        console.log(\"Math.max(event.target.value-3,2) = \" + Math.max(clickPosX - 3, 2));\n        console.log(\"result = \" + sliderWidth / 100 * Math.max(clickPosX - 3, 2) + \"px\"); //TODO: on move: register offset from start pos\n        //TODO: on up: update frame no depending on offset\n\n        this.setState({//frameNumber: clickPosX,\n          //frameNumberStyle: {\n          //  position: \"relative\",\n          //  left: ((sliderWidth/100) * (clickPosX-1)) + 3 + \"px\",\n          //}\n        }, () => {\n          this.setState({\n            imagesrc: this.getFrame()\n          });\n        });\n      }\n    };\n\n    this.handleKeyPress = event => {\n      // if user presses enter -> confirm bounding box selection for current frame\n      // -> advance frame number\n      // TODO: \n      // save selection of curr bbox\n      // jumpt to frame after curr frame\n      // if next bbox exists, change curr and leave next bbox the same\n      // if next bbox does not exist, set next bbox to curr\n      if (event.keyCode === 13) {\n        // enter\n        console.log(\"ENTER\"); // if no bbox on this.state.frameNumber + 1 copy over previous bbox\n\n        var _trackerOutput = this.state.trackerOutput;\n        let i = this.state.frameNumber;\n\n        if (this.isValidBBox(_trackerOutput[i] === false) && i < this.state.num_imgs) {\n          _trackerOutput[i][0] = _trackerOutput[i - 1][0];\n          _trackerOutput[i][1] = _trackerOutput[i - 1][1];\n          _trackerOutput[i][2] = _trackerOutput[i - 1][2];\n          _trackerOutput[i][3] = _trackerOutput[i - 1][3];\n\n          let _new_frame_number = Number(this.state.frameNumber) + 1;\n\n          console.log('set new frameNumber ' + _new_frame_number);\n          var sliderWidth = ReactDOM.findDOMNode(this).getElementsByClassName('slidecontainer')[0].offsetWidth - 25;\n          console.log('sliderwidth on enter ' + sliderWidth);\n          console.log('_new_frame_number ' + _new_frame_number);\n          console.log('((sliderWidth/100) ' + sliderWidth / 100);\n          console.log('Math.max(_new_frame_number-3,2) ' + Math.max(_new_frame_number - 3, 2));\n          console.log('((sliderWidth/100) * Math.max(_new_frame_number-3,2)) ' + sliderWidth / 100 * Math.max(_new_frame_number - 3, 2));\n          this.setState({\n            frameNumber: _new_frame_number,\n            maxFrameNumber: _new_frame_number,\n            //TODO handle if we press this in earlier frames (correct bboxes)\n            trackerOutput: _trackerOutput\n          }, () => {\n            this.setState({\n              imagesrc: this.getFrame(),\n              frameNumberStyle: {\n                position: \"relative\",\n                left: sliderWidth / 100 * (_new_frame_number - 1) + 3 + \"px\"\n              }\n            });\n          });\n        }\n      }\n    };\n\n    var _trackerOutput2 = [];\n    var _num_imgs = 100;\n\n    for (var _i = 0; _i < _num_imgs; _i++) {\n      _trackerOutput2.push([0, 0, 0, 0]);\n    }\n\n    _trackerOutput2[0][0] = 464;\n    _trackerOutput2[0][1] = 113;\n    _trackerOutput2[0][2] = 31;\n    _trackerOutput2[0][3] = 32;\n    this.state = {\n      trackerOutput: _trackerOutput2,\n      frameNumber: 1,\n      //start counting at 1\n      maxFrameNumber: 1,\n      // max frame number that has been labelled by tracker or manually\n      imagesrc: \"\",\n      // props for BoundingBox\n      l: 464,\n      t: 113,\n      h: 31,\n      w: 32,\n      num_imgs: _num_imgs,\n      max_tracked: 0,\n      frameNumberStyle: {\n        position: \"relative\",\n        left: \"3px\"\n      }\n    };\n    this.handleBBoxUpdate = this.handleBBoxUpdate.bind(this);\n    this.handleSliderInput = this.handleSliderInput.bind(this);\n  } // https://stackoverflow.com/questions/23450534/how-to-call-a-python-function-from-node-js\n  // https://www.freecodecamp.org/news/create-a-react-frontend-a-node-express-backend-and-connect-them-together-c5798926047c/\n  // ref: https://stackoverflow.com/questions/51845170/how-to-deploy-a-node-js-app-that-runs-a-python-script-in-azure\n  //connect to node.js (code in api folder)\n\n\n  runTracker() {\n    console.log('run trackers');\n    let f = this.state.frameNumber - 1;\n    let pythonCall = \"http://localhost:9000/callPython/left/\" + this.state.trackerOutput[f][0] + \"/top/\" + this.state.trackerOutput[f][1] + \"/width/\" + this.state.trackerOutput[f][2] + \"/height/\" + this.state.trackerOutput[f][3] + \"/frameno/\" + f + \"/\";\n    console.log(pythonCall);\n    fetch(pythonCall).then(res => res.text()) //.then(res => this.setState({ trackerOutput: (res)} )); \n    .then(res => this.handleTrackerOutput(res));\n    document.activeElement.blur(); // remove focus from button after click  => not triggered by pressing enter\n  }\n\n  render() {\n    const boundingBoxes = []; //console.log(this.state.trackerOutput.length);\n    //console.log(this.state.trackerOutput);\n    //console.log('frameNumber before render' +this.state.frameNumber);\n\n    for (var i = 0; i < this.state.trackerOutput.length; i += 1) {\n      // this.state.numChildren\n      //console.log('add? ' + this.state.trackerOutput[i][0] + ' ' + this.state.trackerOutput[i][1]+ ' ' + this.state.trackerOutput[i][2]+ ' ' + this.state.trackerOutput[i][3]) \n      if (this.state.trackerOutput[i][0] !== undefined && this.isValidBBox(this.state.trackerOutput[i])) {\n        let _classname = \"bbox\";\n        let _isSelected = false;\n\n        if (i !== this.state.frameNumber - 1) {\n          //_classname = \"bbox selected\"\n          //_isSelected = true\n          //console.log('selected bbox')\n          //console.log('add ' + this.state.trackerOutput[i])\n          boundingBoxes.push(React.createElement(BoundingBox, {\n            l: this.state.trackerOutput[i][0],\n            t: this.state.trackerOutput[i][1],\n            w: this.state.trackerOutput[i][2],\n            h: this.state.trackerOutput[i][3],\n            key: i,\n            number: i,\n            classname: _classname,\n            isSelected: _isSelected,\n            frameNumber: this.state.frameNumber,\n            handleBBoxUpdate: this.handleBBoxUpdate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149\n            },\n            __self: this\n          }));\n        }\n      }\n    }\n\n    ;\n    let _classname = \"bbox selected\";\n    let _isSelected = true;\n    i = this.state.frameNumber - 1; //console.log('valid framenumber? ' + (i))\n    // place selected bbox on top\n\n    boundingBoxes.push(React.createElement(BoundingBox, {\n      l: this.state.trackerOutput[i][0],\n      t: this.state.trackerOutput[i][1],\n      w: this.state.trackerOutput[i][2],\n      h: this.state.trackerOutput[i][3],\n      key: i,\n      number: i,\n      classname: _classname,\n      isSelected: _isSelected,\n      frameNumber: this.state.frameNumber,\n      handleBBoxUpdate: this.handleBBoxUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })); //console.log('frameNumber after render: ' + this.state.frameNumber)\n    //<div class=\"chrome\">\n    //<input id=\"myinput\" type=\"range\" min=\"1\" max={this.state.num_imgs} value={this.state.frameNumber} style = {this.state.slider2Style} onInput = {this.handleSlider2Input} />\n    //</div>\n    //note: changed slider from input type=\"range\" min=\"1\" step=\"1\" to Slider\n\n    return React.createElement(\"div\", {\n      id: \"FrameArea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, boundingBoxes, React.createElement(\"img\", {\n      id: \"frame\",\n      src: this.state.imagesrc,\n      alt: \"\",\n      width: \"500\",\n      draggable: \"false\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      id: \"btn_runtracker\",\n      onClick: () => this.runTracker(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"run tracker\"), React.createElement(Slider, {\n      max_value: this.state.maxFrameNumber,\n      max_tracked: this.state.max_tracked,\n      min_value: 1,\n      value: this.state.frameNumber,\n      handleSliderInput: this.handleSliderInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }));\n  }\n\n  handleTrackerOutput(res) {\n    console.log(res);\n    res = res.split('\\r\\n');\n    var _trackerOutput = this.state.trackerOutput; // note: at this point frameNumber is the frame where the tracker run started\n    // res starts at frameNumber\n\n    console.log('res ' + res);\n    var last_tracked_box = this.state.frameNumber;\n\n    for (var i = this.state.frameNumber; i < Math.min(this.state.frameNumber + res.length - 2, this.state.num_imgs); i++) {\n      //-2 because there is always an empty string at the end\n      //console.log('check at frame no' + (i - this.state.frameNumber + 1))\n      //console.log(res[i-this.state.frameNumber + 1])\n      var item = res[i - this.state.frameNumber + 1].split(','); //console.log('item ' + item)\n\n      if (item[0] !== \"\") {\n        _trackerOutput[i][0] = item[0];\n        _trackerOutput[i][1] = item[1];\n        _trackerOutput[i][2] = item[2];\n        _trackerOutput[i][3] = item[3];\n        last_tracked_box = i;\n      } else {\n        break;\n      }\n    } // changed: \n    // now that we added all the tracked bounding boxes until failure:\n    // add at the same location as the last fail all other bboxes\n    // TODO -->  mark it red  (suggestion bounding boxes)\n    // TODO change if a bbox is being manipulated\n    // TODO only allow change to selected bbox\n    //for ( i = last_tracked_box + 1; i < this.state.num_imgs; i ++ ){\n    //}\n    // suggest bbox one frame after tracking failure frame\n\n\n    if (i > 0 && last_tracked_box + 1 < this.state.num_imgs) {\n      let i = last_tracked_box + 1; //TODO remove + 1??\n\n      _trackerOutput[i][0] = _trackerOutput[i - 1][0];\n      _trackerOutput[i][1] = _trackerOutput[i - 1][1];\n      _trackerOutput[i][2] = _trackerOutput[i - 1][2];\n      _trackerOutput[i][3] = _trackerOutput[i - 1][3];\n    }\n\n    console.log('set frameNumber to ' + (last_tracked_box + 2));\n\n    var _new_frame_number = last_tracked_box + 1;\n\n    if (last_tracked_box + 2 <= this.state.num_imgs) {\n      _new_frame_number = last_tracked_box + 2;\n    }\n\n    var sliderWidth = ReactDOM.findDOMNode(this).getElementsByClassName('slidecontainer')[0].offsetWidth - 25;\n    console.log(sliderWidth); //console.log(arr)\n\n    this.setState({\n      trackerOutput: _trackerOutput,\n      frameNumber: _new_frame_number,\n      maxFrameNumber: _new_frame_number,\n      imagesrc: this.getFrameFromFrameNo(_new_frame_number),\n      frameNumberStyle: {\n        position: \"relative\",\n        left: sliderWidth / 100 * (_new_frame_number - 1) + 3 + \"px\"\n      }\n    });\n  }\n\n  getFrame() {\n    return \"images/\" + this.pad(this.state.frameNumber, 8) + \".jpg\"; //number with 8 digits pad with leading zeros\n  }\n\n  getFrameFromFrameNo(frameno) {\n    return \"images/\" + this.pad(frameno, 8) + \".jpg\"; //number with 8 digits pad with leading zeros\n  }\n\n  pad(num, size) {\n    var s = num + \"\";\n\n    while (s.length < size) s = \"0\" + s;\n\n    return s;\n  }\n\n  componentDidMount() {\n    document.getElementById('frame').ondragstart = function () {\n      return false;\n    };\n\n    this.setState({\n      imagesrc: this.getFrame() //trackerOutput: temp_trackerOutput,\n\n    }); //console.log('set trackerOutput' + this.state.trackerOutput)\n\n    document.addEventListener(\"keypress\", this.handleKeyPress);\n  }\n\n  handleBBoxUpdate(l, t, w, h, number) {\n    //console.log('passed values ' + l +' '+ t + ' ' + w + ' ' + h) \n    var temp_trackerOutput = this.state.trackerOutput;\n    temp_trackerOutput[number][0] = l;\n    temp_trackerOutput[number][1] = t;\n    temp_trackerOutput[number][2] = w;\n    temp_trackerOutput[number][3] = h;\n    this.setState({\n      trackerOutput: temp_trackerOutput\n    });\n  }\n\n  isValidBBox(bbox) {\n    return bbox[0] !== 0 || bbox[1] !== 0 || bbox[2] !== 0 || bbox[3] !== 0;\n  }\n\n}\n\nclass Slider extends React.Component {\n  // props: value, max_tracked, max_value, min_value\n  constructor(props) {\n    super(props);\n    this.state = {\n      clickPosX: undefined,\n      //TODO put where?\n      selectedStyle: {\n        backgroundColor: \"blue\",\n        width: \"0%\",\n        height: \"20px\"\n      },\n      bgStyle: {\n        backgroundColor: \"#dedede\",\n        // light gray\n        width: \"100%\",\n        height: \"20px\"\n      },\n      trackedStyle: {\n        backgroundColor: \"light-blue\",\n        width: \"0%\",\n        height: \"20px\"\n      },\n      thumbStyle: {//height: \"20px\",\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: this.state.bgStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"Thumb\",\n      className: \"slidecontainer\",\n      style: this.state.thumbStyle,\n      onMouseDown: this.props.handleSliderInput,\n      onMouseUp: this.props.handleSliderInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, this.state.frameNumber)));\n  }\n\n}\n\nclass BoundingBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      ReactDOM.findDOMNode(this).addEventListener('mousedown', this.handleMouseDown);\n      ReactDOM.findDOMNode(this).addEventListener('mousemove', this.handleDrag); //in handle: remove 'mousedown' while mouse down, add when mouse up\n\n      if (this.props.isSelected) {//console.log('mount selected element ' + this.props.number)\n        //ReactDOM.findDOMNode(this).addEventListener('mousedown', this.handleMouseDown); \n      } else {} //console.log('mount un-selected element')\n        //in handle: remove 'mouseup' while mouse up, add when mouse down\n        //in handle: remove 'mousemove' while mouse up, add when mouse down\n\n    };\n\n    this.componentWillUnmount = () => {\n      // remove all listeners that are attached to this\n      ReactDOM.findDOMNode(this).removeEventListener('mousedown', this.handleMouseDown);\n      document.removeEventListener('mouseup', this.handleMouseUp);\n      document.removeEventListener('mousemove', this.handleMouseUp);\n    };\n\n    this.handleResize = event => {\n      console.log('handle resize'); // only if this is the selected bbox\n\n      if (this.props.isSelected) {\n        if (event.type === 'mousedown') {\n          //console.log('clicked: resize me')\n          // enter resize state\n          this.setState({\n            resizeModeOn: true\n          });\n          this.setState({\n            ElementStyle: {\n              left: this.state.ElementStyle.left,\n              top: this.state.ElementStyle.top,\n              height: this.state.ElementStyle.height,\n              width: this.state.ElementStyle.width,\n              cursor: \"nw-resize\"\n            }\n          });\n          document.addEventListener('mousemove', this.handleResize);\n        } else if (event.type === 'mousemove') {\n          //console.log('listen for mouse-up')\n          document.addEventListener('mouseup', this.handleMouseUp);\n          this.setState({\n            ElementStyle: {\n              left: this.state.ElementStyle.left,\n              top: this.state.ElementStyle.top,\n              height: this.state.ElementStyle.height,\n              width: this.state.ElementStyle.width,\n              cursor: \"nw-resize\"\n            }\n          });\n          this.setState({\n            possibleResizeModeOn: true\n          });\n\n          if (this.state.resizeModeOn) {\n            var minwidthheight = 5;\n            var offset_framearea = 100; // stop if width/height == 0\n\n            if (this.state.w >= minwidthheight) {\n              // add mouse-position to width\n              this.setState({\n                w: Math.max(minwidthheight, event.pageX - this.state.l - offset_framearea)\n              });\n              this.setState({\n                ElementStyle: {\n                  left: this.state.ElementStyle.left,\n                  top: this.state.ElementStyle.top,\n                  height: this.state.ElementStyle.height,\n                  width: this.state.w + \"px\",\n                  cursor: \"nw-resize\"\n                }\n              });\n            }\n\n            if (this.state.h >= minwidthheight) {\n              // add mouse-position to height\n              this.setState({\n                h: Math.max(minwidthheight, event.pageY - this.state.t - offset_framearea)\n              });\n              this.setState({\n                ElementStyle: {\n                  left: this.state.ElementStyle.left,\n                  top: this.state.ElementStyle.top,\n                  height: this.state.h + \"px\",\n                  width: this.state.ElementStyle.width,\n                  cursor: \"nw-resize\"\n                }\n              });\n            } // only pass changed values to parent\n\n\n            this.props.handleBBoxUpdate(this.state.l, this.state.t, this.state.w, this.state.h, this.props.number);\n          }\n        } else if (event.type === \"mouseout\") {\n          this.setState({\n            possibleResizeModeOn: false,\n            ElementStyle: {\n              left: this.state.ElementStyle.left,\n              top: this.state.ElementStyle.top,\n              height: this.state.ElementStyle.height,\n              width: this.state.ElementStyle.width,\n              cursor: \"move\"\n            }\n          });\n        }\n      } else {\n        this.setState({\n          possibleResizeModeOn: false,\n          ElementStyle: {\n            left: this.state.ElementStyle.left,\n            top: this.state.ElementStyle.top,\n            height: this.state.ElementStyle.height,\n            width: this.state.ElementStyle.width,\n            cursor: \"default\"\n          }\n        });\n      }\n    };\n\n    this.handleMouseDown = event => {\n      // only if this is the selected bbox\n      if (this.props.isSelected) {\n        //check if resize is on\n        // if click is inside resize-box -> resize\n        // otherwise -> drag\n        if (this.state.possibleResizeModeOn === false) {\n          this.setState({\n            dragModeOn: true,\n            diffx: event.pageX - this.state.l,\n            diffy: event.pageY - this.state.t\n          });\n          document.addEventListener('mousemove', this.handleDrag);\n          ReactDOM.findDOMNode(this).removeEventListener('mousedown', this.handleMouseDown);\n          document.addEventListener('mouseup', this.handleMouseUp);\n        }\n      } else {\n        this.setState({\n          possibleResizeModeOn: false,\n          ElementStyle: {\n            left: this.state.ElementStyle.left,\n            top: this.state.ElementStyle.top,\n            height: this.state.ElementStyle.height,\n            width: this.state.ElementStyle.width,\n            cursor: \"default\"\n          }\n        });\n      }\n    };\n\n    this.handleMouseUp = event => {\n      if (this.props.isSelected) {\n        //console.log('handle mouse up - remove mouse move listener')\n        document.removeEventListener('mousemove', this.handleResize);\n        this.setState({\n          ElementStyle: {\n            left: this.state.ElementStyle.left,\n            top: this.state.ElementStyle.top,\n            height: this.state.ElementStyle.height,\n            width: this.state.ElementStyle.width,\n            cursor: \"move\"\n          }\n        });\n        this.setState({\n          dragModeOn: false,\n          possibleResizeModeOn: false,\n          resizeModeOn: false\n        });\n        document.removeEventListener('mousemove', this.handleDrag);\n\n        if (ReactDOM.findDOMNode(this) !== undefined) {\n          ReactDOM.findDOMNode(this).addEventListener('mousedown', this.handleMouseDown);\n        }\n\n        document.removeEventListener('mouseup', this.handleMouseUp);\n      } else {\n        this.setState({\n          possibleResizeModeOn: false,\n          ElementStyle: {\n            left: this.state.ElementStyle.left,\n            top: this.state.ElementStyle.top,\n            height: this.state.ElementStyle.height,\n            width: this.state.ElementStyle.width,\n            cursor: \"default\"\n          }\n        });\n      }\n    };\n\n    this.handleDrag = event => {\n      if (this.props.isSelected) {\n        this.setState({\n          ElementStyle: {\n            left: this.state.ElementStyle.left,\n            top: this.state.ElementStyle.top,\n            height: this.state.ElementStyle.height,\n            width: this.state.ElementStyle.width,\n            cursor: \"move\"\n          }\n        });\n\n        if (this.state.dragModeOn === true) {\n          this.setState({\n            l: event.pageX - this.state.diffx,\n            t: event.pageY - this.state.diffy\n          });\n          this.setState({\n            ElementStyle: {\n              left: event.pageX - this.state.diffx + \"px\",\n              top: event.pageY - this.state.diffy + \"px\",\n              height: this.state.ElementStyle.height,\n              width: this.state.ElementStyle.width,\n              cursor: \"move\"\n            }\n          });\n          this.props.handleBBoxUpdate(this.state.l, this.state.t, this.state.w, this.state.h, this.props.number);\n        }\n      } else {\n        this.setState({\n          possibleResizeModeOn: false,\n          ElementStyle: {\n            left: this.state.ElementStyle.left,\n            top: this.state.ElementStyle.top,\n            height: this.state.ElementStyle.height,\n            width: this.state.ElementStyle.width,\n            cursor: \"default\"\n          }\n        });\n      }\n    };\n\n    this.state = {\n      ElementStyle: {\n        left: props.l + \"px\",\n        top: props.t + \"px\",\n        width: props.w + \"px\",\n        height: props.h + \"px\",\n        cursor: \"default\"\n      },\n      l: props.l,\n      t: props.t,\n      h: props.h,\n      w: props.w,\n      diffx: 0,\n      diffy: 0,\n      dragModeOn: false,\n      resizeModeOn: false,\n      possibleResizeModeOn: false // if active -> do not drag\n\n    };\n    this.handleResize = this.handleResize.bind(this);\n  }\n\n  render() {\n    // add resize box only to selected element\n    var resizebox;\n\n    if (this.props.isSelected) {\n      resizebox = React.createElement(ResizeBox, {\n        posx: this.state.w - 5 + \"px\",\n        posy: this.state.h - 5 + \"px\",\n        handleResize: this.handleResize,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: this.props.classname,\n      style: this.state.ElementStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468\n      },\n      __self: this\n    }, resizebox);\n  }\n\n} // little box on bbox's lower right corner\n// resizes box when dragged\n// child of Bounding Box\n\n\nclass ResizeBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      resizeModeOn: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"resizebox\",\n      style: {\n        left: this.props.posx,\n        top: this.props.posy\n      },\n      onMouseDown: this.props.handleResize // called in parent BoundingBox\n      ,\n      onMouseMove: this.props.handleResize,\n      onMouseOut: this.props.handleResize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 709\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/anna_/azuretest/annotation-tool/src/App.js"],"names":["React","Component","ReactDOM","App","constructor","props","render","FrameArea","handleSliderInput","event","type","console","log","clickPosX","pageX","sliderWidth","findDOMNode","getElementsByClassName","offsetWidth","Math","max","setState","imagesrc","getFrame","handleKeyPress","keyCode","_trackerOutput","state","trackerOutput","i","frameNumber","isValidBBox","num_imgs","_new_frame_number","Number","maxFrameNumber","frameNumberStyle","position","left","_num_imgs","push","l","t","h","w","max_tracked","handleBBoxUpdate","bind","runTracker","f","pythonCall","fetch","then","res","text","handleTrackerOutput","document","activeElement","blur","boundingBoxes","length","undefined","_classname","_isSelected","split","last_tracked_box","min","item","getFrameFromFrameNo","pad","frameno","num","size","s","componentDidMount","getElementById","ondragstart","addEventListener","number","temp_trackerOutput","bbox","Slider","selectedStyle","backgroundColor","width","height","bgStyle","trackedStyle","thumbStyle","BoundingBox","handleMouseDown","handleDrag","isSelected","componentWillUnmount","removeEventListener","handleMouseUp","handleResize","resizeModeOn","ElementStyle","top","cursor","possibleResizeModeOn","minwidthheight","offset_framearea","pageY","dragModeOn","diffx","diffy","resizebox","classname","ResizeBox","posx","posy"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ReactDOM from 'react-dom';\n\n\n\n// color scheme https://www.schemecolor.com/coral-blue.php\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <FrameArea>\n        </FrameArea>\n      </div>\n    )\n  }\n}\n\n// area shows the video and is the region where the bounding-box(es)\n// can be moved \nclass FrameArea extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // 100 = number of images\n    // add empty bbox [0,0,0,0] for every frame\n    var _trackerOutput = []\n    var _num_imgs = 100;\n    for (var i = 0; i < _num_imgs; i++) {\n      _trackerOutput.push([0,0,0,0]);\n    }\n    _trackerOutput[0][0] = 464;\n    _trackerOutput[0][1] = 113;\n    _trackerOutput[0][2] = 31;\n    _trackerOutput[0][3] = 32;\n\n    this.state = { \n      trackerOutput: _trackerOutput, \n      frameNumber: 1, //start counting at 1\n      maxFrameNumber: 1, // max frame number that has been labelled by tracker or manually\n      imagesrc: \"\",\n      // props for BoundingBox\n      l: 464,\n      t: 113,\n      h: 31,\n      w: 32,\n      num_imgs: _num_imgs,\n      max_tracked: 0,\n      frameNumberStyle : {\n        position: \"relative\",\n        left: \"3px\",\n      },\n    };\n\n    this.handleBBoxUpdate = this.handleBBoxUpdate.bind(this)\n    this.handleSliderInput = this.handleSliderInput.bind(this)\n  }\n\n  // https://stackoverflow.com/questions/23450534/how-to-call-a-python-function-from-node-js\n  // https://www.freecodecamp.org/news/create-a-react-frontend-a-node-express-backend-and-connect-them-together-c5798926047c/\n  // ref: https://stackoverflow.com/questions/51845170/how-to-deploy-a-node-js-app-that-runs-a-python-script-in-azure\n  //connect to node.js (code in api folder)\n  runTracker() {\n    console.log('run trackers')\n\n    let f = this.state.frameNumber - 1\n    let pythonCall = \"http://localhost:9000/callPython/left/\"\n                      + this.state.trackerOutput[f][0] +\"/top/\"\n                      + this.state.trackerOutput[f][1] +\"/width/\"\n                      + this.state.trackerOutput[f][2] +\"/height/\"\n                      + this.state.trackerOutput[f][3] +\"/frameno/\" \n                      + f + \"/\"\n\n\n    console.log(pythonCall);\n    fetch(pythonCall) \n      .then(res => res.text())\n      //.then(res => this.setState({ trackerOutput: (res)} )); \n      .then(res => this.handleTrackerOutput(res) );      \n\n      document.activeElement.blur(); // remove focus from button after click  => not triggered by pressing enter\n  }\n\n  handleSliderInput = (event) => {\n\n    if (event.type === \"mousedown\" || event.type === \"mouseup\" ){\n      console.log(\"test: mouse down/up\")\n    }else{\n       \n      //TODO: on down: register start pos\n      var clickPosX = event.pageX; \n\n      console.log(\"handle slider input\")\n      // 1. change framenumber\n      // 2. update image\n      var sliderWidth =  ReactDOM.findDOMNode(this).getElementsByClassName('slidecontainer')[0].offsetWidth - 25;\n      console.log('event.target.value = ' + clickPosX)\n      console.log('sliderWidth = ' + sliderWidth)\n      console.log(\"(sliderWidth/100) = \" + (sliderWidth/100))\n      console.log(\"Math.max(event.target.value-3,2) = \" +  Math.max(clickPosX-3,2))\n      console.log(\"result = \" + ((sliderWidth/100) * Math.max(clickPosX-3,2)) + \"px\")\n\n      //TODO: on move: register offset from start pos\n  \n  \n      //TODO: on up: update frame no depending on offset\n      this.setState({\n        //frameNumber: clickPosX,\n        //frameNumberStyle: {\n        //  position: \"relative\",\n        //  left: ((sliderWidth/100) * (clickPosX-1)) + 3 + \"px\",\n        //}\n      }, () => {\n        this.setState({\n          imagesrc: this.getFrame(),\n        });\n      });\n    }\n  }\n\n  render(){\n\n    const boundingBoxes = [];\n    \n    //console.log(this.state.trackerOutput.length);\n    //console.log(this.state.trackerOutput);\n    //console.log('frameNumber before render' +this.state.frameNumber);\n\n    \n    for (var i = 0; i < this.state.trackerOutput.length; i += 1) { // this.state.numChildren\n      \n      //console.log('add? ' + this.state.trackerOutput[i][0] + ' ' + this.state.trackerOutput[i][1]+ ' ' + this.state.trackerOutput[i][2]+ ' ' + this.state.trackerOutput[i][3]) \n      if(this.state.trackerOutput[i][0] !== undefined \n        && this.isValidBBox(this.state.trackerOutput[i])){\n        let _classname = \"bbox\"\n        let _isSelected = false\n        if (i !== this.state.frameNumber-1){\n          //_classname = \"bbox selected\"\n          //_isSelected = true\n          //console.log('selected bbox')\n       \n\n        //console.log('add ' + this.state.trackerOutput[i])\n\n        boundingBoxes.push(<BoundingBox \n          l = {this.state.trackerOutput[i][0]} \n          t = {this.state.trackerOutput[i][1]} \n          w = {this.state.trackerOutput[i][2]} \n          h = {this.state.trackerOutput[i][3]}  \n          key={i} \n          number={i}\n          classname = {_classname}\n          isSelected = {_isSelected}\n          frameNumber = {this.state.frameNumber}\n          handleBBoxUpdate = {this.handleBBoxUpdate} />);\n        }\n      }\n    };\n\n    let _classname = \"bbox selected\"\n    let _isSelected = true\n    i = this.state.frameNumber-1\n    //console.log('valid framenumber? ' + (i))\n    // place selected bbox on top\n    boundingBoxes.push(<BoundingBox \n      l = {this.state.trackerOutput[i][0]} \n      t = {this.state.trackerOutput[i][1]} \n      w = {this.state.trackerOutput[i][2]} \n      h = {this.state.trackerOutput[i][3]}  \n      key={i} \n      number={i}\n      classname = {_classname}\n      isSelected = {_isSelected}\n      frameNumber = {this.state.frameNumber}\n      handleBBoxUpdate = {this.handleBBoxUpdate} />);\n  \n    \n\n    //console.log('frameNumber after render: ' + this.state.frameNumber)\n\n    //<div class=\"chrome\">\n    //<input id=\"myinput\" type=\"range\" min=\"1\" max={this.state.num_imgs} value={this.state.frameNumber} style = {this.state.slider2Style} onInput = {this.handleSlider2Input} />\n    //</div>\n\n    //note: changed slider from input type=\"range\" min=\"1\" step=\"1\" to Slider\n    return (\n      <div id=\"FrameArea\">\n      {boundingBoxes}\n      <img id = \"frame\" src={this.state.imagesrc}  alt=\"\" width=\"500\" draggable=\"false\" ></img>\n      <button type=\"button\" id=\"btn_runtracker\" onClick = {() => this.runTracker()}>run tracker</button>\n      <Slider max_value={this.state.maxFrameNumber} max_tracked = {this.state.max_tracked}  min_value = {1} value={this.state.frameNumber} handleSliderInput={this.handleSliderInput} />\n      </div>\n    )\n  }\n\n\n  handleTrackerOutput(res){\n    console.log(res)\n    res = res.split('\\r\\n')\n    var _trackerOutput = this.state.trackerOutput;\n\n    // note: at this point frameNumber is the frame where the tracker run started\n    // res starts at frameNumber\n    console.log('res '+ res)\n    var last_tracked_box = this.state.frameNumber;\n    for (var i = this.state.frameNumber; i < Math.min(this.state.frameNumber + res.length - 2, this.state.num_imgs); i++ ){ //-2 because there is always an empty string at the end\n      //console.log('check at frame no' + (i - this.state.frameNumber + 1))\n      //console.log(res[i-this.state.frameNumber + 1])\n      var item = res[i - this.state.frameNumber + 1].split(',');\n      //console.log('item ' + item)\n      if(item[0] !== \"\"){\n        _trackerOutput[i][0] = item[0]; \n        _trackerOutput[i][1] = item[1]; \n        _trackerOutput[i][2] = item[2]; \n        _trackerOutput[i][3] = item[3]; \n        last_tracked_box = i;\n      }else{\n        break;\n      }\n    }\n\n    // changed: \n    // now that we added all the tracked bounding boxes until failure:\n    // add at the same location as the last fail all other bboxes\n    // TODO -->  mark it red  (suggestion bounding boxes)\n    // TODO change if a bbox is being manipulated\n    // TODO only allow change to selected bbox\n    //for ( i = last_tracked_box + 1; i < this.state.num_imgs; i ++ ){\n    //}\n\n    \n    // suggest bbox one frame after tracking failure frame\n    if (i > 0 && last_tracked_box + 1 < this.state.num_imgs){\n      let i = last_tracked_box + 1 //TODO remove + 1??\n      _trackerOutput[i][0] = _trackerOutput[i-1][0]; \n      _trackerOutput[i][1] = _trackerOutput[i-1][1]; \n      _trackerOutput[i][2] = _trackerOutput[i-1][2]; \n      _trackerOutput[i][3] = _trackerOutput[i-1][3];\n    }\n\n    console.log('set frameNumber to ' + (last_tracked_box + 2))\n    var _new_frame_number = last_tracked_box + 1; \n    if (last_tracked_box + 2 <= this.state.num_imgs){\n      _new_frame_number = last_tracked_box + 2;\n    }\n\n    var sliderWidth =  ReactDOM.findDOMNode(this).getElementsByClassName('slidecontainer')[0].offsetWidth - 25;\n    console.log(sliderWidth)\n\n    //console.log(arr)\n    this.setState({ \n      trackerOutput: _trackerOutput,\n      frameNumber: _new_frame_number,\n      maxFrameNumber: _new_frame_number,\n      imagesrc: this.getFrameFromFrameNo(_new_frame_number),\n      frameNumberStyle: {\n          position: \"relative\",\n          left: ((sliderWidth/100) * (_new_frame_number-1)) + 3 + \"px\",\n        },\n    } );\n  }\n\n  getFrame(){\n    return \"images/\"+ this.pad(this.state.frameNumber,8) +\".jpg\"  //number with 8 digits pad with leading zeros\n  }\n\n  getFrameFromFrameNo(frameno){\n    return \"images/\"+ this.pad(frameno,8) +\".jpg\"  //number with 8 digits pad with leading zeros\n  }\n\n  pad(num, size) {\n    var s = num+\"\";\n    while (s.length < size) s = \"0\" + s;\n    return s;\n}\n\n\n  componentDidMount() {\n    document.getElementById('frame').ondragstart = function() { return false; };\n    this.setState({\n      imagesrc: this.getFrame(),\n      //trackerOutput: temp_trackerOutput,\n    });\n    //console.log('set trackerOutput' + this.state.trackerOutput)\n    document.addEventListener(\"keypress\", this.handleKeyPress)\n  }\n\n  handleBBoxUpdate(l,t,w,h,number){\n    //console.log('passed values ' + l +' '+ t + ' ' + w + ' ' + h) \n    var temp_trackerOutput = this.state.trackerOutput;\n    temp_trackerOutput[number][0] = l;\n    temp_trackerOutput[number][1] = t;\n    temp_trackerOutput[number][2] = w;\n    temp_trackerOutput[number][3] = h;\n\n    this.setState({\n      trackerOutput: temp_trackerOutput,\n    });\n  }\n\n  isValidBBox(bbox){\n    return bbox[0] !== 0 || bbox[1] !== 0 || bbox[2] !== 0 || bbox[3] !== 0\n  }\n\n  handleKeyPress = (event) => {\n\n    // if user presses enter -> confirm bounding box selection for current frame\n    // -> advance frame number\n\n\n    // TODO: \n    // save selection of curr bbox\n    // jumpt to frame after curr frame\n    // if next bbox exists, change curr and leave next bbox the same\n    // if next bbox does not exist, set next bbox to curr\n\n    if (event.keyCode === 13) {  // enter\n      console.log(\"ENTER\")      \n\n      // if no bbox on this.state.frameNumber + 1 copy over previous bbox\n      var _trackerOutput = this.state.trackerOutput\n      let i = this.state.frameNumber\n\n      if (\n        this.isValidBBox(_trackerOutput[i] === false) &&\n        i < this.state.num_imgs){\n          _trackerOutput[i][0] = _trackerOutput[i-1][0]; \n          _trackerOutput[i][1] = _trackerOutput[i-1][1]; \n          _trackerOutput[i][2] = _trackerOutput[i-1][2]; \n          _trackerOutput[i][3] = _trackerOutput[i-1][3];\n\n        let _new_frame_number = (Number(this.state.frameNumber) + 1)\n        console.log('set new frameNumber ' + _new_frame_number)\n\n        var sliderWidth =  ReactDOM.findDOMNode(this).getElementsByClassName('slidecontainer')[0].offsetWidth -25;\n        console.log('sliderwidth on enter ' + sliderWidth)\n        console.log('_new_frame_number '+ _new_frame_number)\n        console.log('((sliderWidth/100) ' + (sliderWidth/100))\n        console.log('Math.max(_new_frame_number-3,2) ' + Math.max(_new_frame_number-3,2))\n        console.log('((sliderWidth/100) * Math.max(_new_frame_number-3,2)) ' + ((sliderWidth/100) * Math.max(_new_frame_number-3,2)))\n\n        this.setState({\n          frameNumber: _new_frame_number,\n          maxFrameNumber: _new_frame_number, //TODO handle if we press this in earlier frames (correct bboxes)\n          trackerOutput: _trackerOutput,\n        }, () => {\n          this.setState({\n            imagesrc: this.getFrame(),\n            frameNumberStyle: {\n              position: \"relative\",\n              left: ((sliderWidth/100) * (_new_frame_number-1)) + 3 +\"px\",\n            }\n          });\n        });\n      }\n    }\n  }\n}\n\n\nclass Slider extends React.Component {\n  // props: value, max_tracked, max_value, min_value\n  constructor(props) {\n    super(props);\n    this.state = {\n      clickPosX: undefined, //TODO put where?\n      selectedStyle: {\n        backgroundColor: \"blue\",\n        width: \"0%\",\n        height: \"20px\",\n      },\n      bgStyle: {\n        backgroundColor: \"#dedede\", // light gray\n        width: \"100%\",\n        height: \"20px\",\n      },\n      trackedStyle: {\n        backgroundColor: \"light-blue\",\n        width: \"0%\",\n        height: \"20px\",\n      },\n      thumbStyle: {\n        //height: \"20px\",\n      },\n    };\n  }\n\n  \n\n  render() {\n    return(\n      <div style = {this.state.bgStyle}>\n        <div id=\"Thumb\" className=\"slidecontainer\" style = {this.state.thumbStyle} onMouseDown = {this.props.handleSliderInput} onMouseUp = {this.props.handleSliderInput}>\n          <p>{this.state.frameNumber}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass BoundingBox extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      ElementStyle: {\n        left: props.l + \"px\",\n        top: props.t + \"px\",\n        width: props.w + \"px\",\n        height: props.h + \"px\",\n        cursor: \"default\",\n      },\n      l: props.l,\n      t: props.t,\n      h: props.h,\n      w: props.w,\n      diffx: 0,\n      diffy: 0,\n      dragModeOn: false,\n      resizeModeOn: false,\n      possibleResizeModeOn: false, // if active -> do not drag\n    };\n\n\n    this.handleResize = this.handleResize.bind(this)\n  }\n\n  componentDidMount = () => {\n\n        ReactDOM.findDOMNode(this).addEventListener('mousedown', this.handleMouseDown); \n        ReactDOM.findDOMNode(this).addEventListener('mousemove', this.handleDrag); \n\n        //in handle: remove 'mousedown' while mouse down, add when mouse up\n        if (this.props.isSelected){\n          //console.log('mount selected element ' + this.props.number)\n          //ReactDOM.findDOMNode(this).addEventListener('mousedown', this.handleMouseDown); \n        }else{\n          //console.log('mount un-selected element')\n        }\n\n        //in handle: remove 'mouseup' while mouse up, add when mouse down\n        //in handle: remove 'mousemove' while mouse up, add when mouse down\n  }\n\n  componentWillUnmount = () => {\n    // remove all listeners that are attached to this\n    ReactDOM.findDOMNode(this).removeEventListener('mousedown', this.handleMouseDown); \n    document.removeEventListener('mouseup', this.handleMouseUp); \n    document.removeEventListener('mousemove', this.handleMouseUp); \n  }\n\n  render() {\n    // add resize box only to selected element\n\n    var resizebox;\n    if (this.props.isSelected) {\n      resizebox = (\n      <ResizeBox posx={(this.state.w - 5) + \"px\"} posy={(this.state.h - 5) + \"px\"} \n      handleResize = {this.handleResize}\n      ></ResizeBox>)\n    }\n\n    return (\n      <div className ={this.props.classname} style={this.state.ElementStyle} >\n        {resizebox}\n      </div>\n    );\n  }\n\n  handleResize = (event) => {\n    console.log('handle resize')\n    // only if this is the selected bbox\n    if(this.props.isSelected){\n    if (event.type === 'mousedown'){\n      //console.log('clicked: resize me')\n\n      // enter resize state\n      this.setState({\n        resizeModeOn: true,\n      });\n      this.setState({          \n        ElementStyle: {\n          left: this.state.ElementStyle.left,\n          top: this.state.ElementStyle.top,\n          height: this.state.ElementStyle.height,\n          width: this.state.ElementStyle.width,\n          cursor: \"nw-resize\",\n        }\n      });\n      document.addEventListener('mousemove', this.handleResize); \n\n    } else if (event.type === 'mousemove'){\n      //console.log('listen for mouse-up')\n      document.addEventListener('mouseup', this.handleMouseUp); \n      this.setState({          \n        ElementStyle: {\n          left: this.state.ElementStyle.left,\n          top: this.state.ElementStyle.top,\n          height: this.state.ElementStyle.height,\n          width: this.state.ElementStyle.width,\n          cursor: \"nw-resize\",\n        }\n      });\n\n      this.setState({ \n        possibleResizeModeOn: true, \n      });\n      if (this.state.resizeModeOn){\n        var minwidthheight = 5;\n        var offset_framearea = 100;\n\n        // stop if width/height == 0\n        if (this.state.w >= minwidthheight){\n          // add mouse-position to width\n          this.setState({\n            w: Math.max(minwidthheight,event.pageX - this.state.l - offset_framearea),\n          });\n    \n          this.setState({          \n            ElementStyle: {\n              left: this.state.ElementStyle.left,\n              top: this.state.ElementStyle.top,\n              height: this.state.ElementStyle.height,\n              width: (this.state.w) + \"px\",\n              cursor: \"nw-resize\",\n            }\n          });\n        }\n        if (this.state.h >= minwidthheight){\n            // add mouse-position to height\n            this.setState({\n              h: Math.max(minwidthheight, event.pageY - this.state.t - offset_framearea),\n            });\n      \n            this.setState({          \n              ElementStyle: {\n                left: this.state.ElementStyle.left,\n                top: this.state.ElementStyle.top,\n                height: (this.state.h) + \"px\",\n                width: this.state.ElementStyle.width,\n                cursor: \"nw-resize\",\n              }\n            });\n          }\n\n\n          // only pass changed values to parent\n          this.props.handleBBoxUpdate(this.state.l,this.state.t,this.state.w,this.state.h, this.props.number); \n      }\n    } else if (event.type === \"mouseout\") {\n      this.setState({\n        possibleResizeModeOn: false,\n        ElementStyle: {\n          left: this.state.ElementStyle.left,\n          top: this.state.ElementStyle.top,\n          height: this.state.ElementStyle.height,\n          width: this.state.ElementStyle.width,\n          cursor: \"move\",\n        }\n      });\n      \n    }\n    } else {\n      this.setState({\n        possibleResizeModeOn: false,\n        ElementStyle: {\n          left: this.state.ElementStyle.left,\n          top: this.state.ElementStyle.top,\n          height: this.state.ElementStyle.height,\n          width: this.state.ElementStyle.width,\n          cursor: \"default\",\n        }\n      });\n    }\n  }\n\n  handleMouseDown = (event) => {\n      // only if this is the selected bbox\n      if(this.props.isSelected){\n        //check if resize is on\n        // if click is inside resize-box -> resize\n        // otherwise -> drag\n\n        if (this.state.possibleResizeModeOn === false){\n          this.setState({\n            dragModeOn: true,\n            diffx: event.pageX - this.state.l,\n            diffy: event.pageY - this.state.t,\n          });\n          document.addEventListener('mousemove', this.handleDrag);\n          ReactDOM.findDOMNode(this).removeEventListener('mousedown', this.handleMouseDown);\n          document.addEventListener('mouseup', this.handleMouseUp); \n        }\n    } else {\n      this.setState({\n        possibleResizeModeOn: false,\n        ElementStyle: {\n          left: this.state.ElementStyle.left,\n          top: this.state.ElementStyle.top,\n          height: this.state.ElementStyle.height,\n          width: this.state.ElementStyle.width,\n          cursor: \"default\",\n        }\n      });\n    }\n   }\n\n   handleMouseUp = (event) => {\n    if(this.props.isSelected){\n      //console.log('handle mouse up - remove mouse move listener')\n      document.removeEventListener('mousemove', this.handleResize); \n        this.setState({          \n          ElementStyle: {\n            left: this.state.ElementStyle.left,\n            top: this.state.ElementStyle.top,\n            height: this.state.ElementStyle.height,\n            width: this.state.ElementStyle.width,\n            cursor: \"move\",\n          }\n        });\n\n        this.setState({\n          dragModeOn: false,\n          possibleResizeModeOn: false, \n          resizeModeOn: false,\n        }); \n        document.removeEventListener('mousemove', this.handleDrag); \n        \n        if (ReactDOM.findDOMNode(this) !== undefined){\n          ReactDOM.findDOMNode(this).addEventListener('mousedown', this.handleMouseDown);\n        }\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    } else {\n      this.setState({\n        possibleResizeModeOn: false,\n        ElementStyle: {\n          left: this.state.ElementStyle.left,\n          top: this.state.ElementStyle.top,\n          height: this.state.ElementStyle.height,\n          width: this.state.ElementStyle.width,\n          cursor: \"default\",\n        }\n      });\n    }\n   }\n\n   handleDrag = (event) => {\n    if(this.props.isSelected){\n      this.setState({          \n        ElementStyle: {\n          left: this.state.ElementStyle.left,\n          top: this.state.ElementStyle.top,\n          height: this.state.ElementStyle.height,\n          width: this.state.ElementStyle.width,\n          cursor: \"move\",\n        }\n      });\n      if (this.state.dragModeOn === true) {\n        this.setState({\n          l: event.pageX - this.state.diffx,\n          t: event.pageY - this.state.diffy,\n        });\n\n        this.setState({\n          ElementStyle: {\n            left: (event.pageX - this.state.diffx) + \"px\",\n            top: (event.pageY - this.state.diffy) + \"px\",\n            height: this.state.ElementStyle.height,\n            width: this.state.ElementStyle.width,\n            cursor: \"move\",\n          }\n        });\n        this.props.handleBBoxUpdate(this.state.l,this.state.t,this.state.w,this.state.h, this.props.number); \n      }\n    }else {\n      this.setState({\n        possibleResizeModeOn: false,\n        ElementStyle: {\n          left: this.state.ElementStyle.left,\n          top: this.state.ElementStyle.top,\n          height: this.state.ElementStyle.height,\n          width: this.state.ElementStyle.width,\n          cursor: \"default\",\n        }\n      });\n    }\n  }\n}\n\n\n\n// little box on bbox's lower right corner\n// resizes box when dragged\n// child of Bounding Box\nclass ResizeBox extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      resizeModeOn: false,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"resizebox\" style = {{left: this.props.posx, top: this.props.posy}}\n        onMouseDown ={this.props.handleResize} // called in parent BoundingBox\n        onMouseMove ={this.props.handleResize}\n        onMouseOut ={this.props.handleResize}\n      > \n      </div>\n    );\n  }\n\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}