{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anna_\\\\azuretest\\\\annotation-tool\\\\src\\\\BoundingBox.jsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass BoundingBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      ReactDOM.findDOMNode(this).addEventListener('mousedown', this.handleMouseDown);\n      ReactDOM.findDOMNode(this).addEventListener('mousemove', this.handleDrag); //in handle: remove 'mousedown' while mouse down, add when mouse up\n\n      if (this.props.isSelected) {//console.log('mount selected element ' + this.props.number)\n        //ReactDOM.findDOMNode(this).addEventListener('mousedown', this.handleMouseDown); \n      } else {} //console.log('mount un-selected element')\n        //in handle: remove 'mouseup' while mouse up, add when mouse down\n        //in handle: remove 'mousemove' while mouse up, add when mouse down\n\n    };\n\n    this.componentWillUnmount = () => {\n      // remove all listeners that are attached to this\n      ReactDOM.findDOMNode(this).removeEventListener('mousedown', this.handleMouseDown);\n      document.removeEventListener('mouseup', this.handleMouseUp);\n      document.removeEventListener('mousemove', this.handleMouseUp);\n    };\n\n    this.handleResize = event => {\n      console.log('handle resize'); // only if this is the selected bbox\n\n      if (this.props.isSelected) {\n        if (event.type === 'mousedown') {\n          //console.log('clicked: resize me')\n          // enter resize state\n          this.setState({\n            resizeModeOn: true\n          });\n          this.setState({\n            ElementStyle: {\n              left: this.state.ElementStyle.left,\n              top: this.state.ElementStyle.top,\n              height: this.state.ElementStyle.height,\n              width: this.state.ElementStyle.width,\n              cursor: \"nw-resize\"\n            }\n          });\n          document.addEventListener('mousemove', this.handleResize);\n        } else if (event.type === 'mousemove') {\n          //console.log('listen for mouse-up')\n          document.addEventListener('mouseup', this.handleMouseUp);\n          this.setState({\n            ElementStyle: {\n              left: this.state.ElementStyle.left,\n              top: this.state.ElementStyle.top,\n              height: this.state.ElementStyle.height,\n              width: this.state.ElementStyle.width,\n              cursor: \"nw-resize\"\n            }\n          });\n          this.setState({\n            possibleResizeModeOn: true\n          });\n\n          if (this.state.resizeModeOn) {\n            var minwidthheight = 5;\n            var offset_framearea = 100; // stop if width/height == 0\n\n            if (this.state.w >= minwidthheight) {\n              // add mouse-position to width\n              this.setState({\n                w: Math.max(minwidthheight, event.pageX - this.state.l - offset_framearea)\n              });\n              this.setState({\n                ElementStyle: {\n                  left: this.state.ElementStyle.left,\n                  top: this.state.ElementStyle.top,\n                  height: this.state.ElementStyle.height,\n                  width: this.state.w + \"px\",\n                  cursor: \"nw-resize\"\n                }\n              });\n            }\n\n            if (this.state.h >= minwidthheight) {\n              // add mouse-position to height\n              this.setState({\n                h: Math.max(minwidthheight, event.pageY - this.state.t - offset_framearea)\n              });\n              this.setState({\n                ElementStyle: {\n                  left: this.state.ElementStyle.left,\n                  top: this.state.ElementStyle.top,\n                  height: this.state.h + \"px\",\n                  width: this.state.ElementStyle.width,\n                  cursor: \"nw-resize\"\n                }\n              });\n            } // only pass changed values to parent\n\n\n            this.props.handleBBoxUpdate(this.state.l, this.state.t, this.state.w, this.state.h, this.props.number);\n          }\n        } else if (event.type === \"mouseout\") {\n          this.setState({\n            possibleResizeModeOn: false,\n            ElementStyle: {\n              left: this.state.ElementStyle.left,\n              top: this.state.ElementStyle.top,\n              height: this.state.ElementStyle.height,\n              width: this.state.ElementStyle.width,\n              cursor: \"move\"\n            }\n          });\n        }\n      } else {\n        this.setState({\n          possibleResizeModeOn: false,\n          ElementStyle: {\n            left: this.state.ElementStyle.left,\n            top: this.state.ElementStyle.top,\n            height: this.state.ElementStyle.height,\n            width: this.state.ElementStyle.width,\n            cursor: \"default\"\n          }\n        });\n      }\n    };\n\n    this.handleMouseDown = event => {\n      // only if this is the selected bbox\n      if (this.props.isSelected) {\n        //check if resize is on\n        // if click is inside resize-box -> resize\n        // otherwise -> drag\n        if (this.state.possibleResizeModeOn === false) {\n          this.setState({\n            dragModeOn: true,\n            diffx: event.pageX - this.state.l,\n            diffy: event.pageY - this.state.t\n          });\n          document.addEventListener('mousemove', this.handleDrag);\n          ReactDOM.findDOMNode(this).removeEventListener('mousedown', this.handleMouseDown);\n          document.addEventListener('mouseup', this.handleMouseUp);\n        }\n      } else {\n        this.setState({\n          possibleResizeModeOn: false,\n          ElementStyle: {\n            left: this.state.ElementStyle.left,\n            top: this.state.ElementStyle.top,\n            height: this.state.ElementStyle.height,\n            width: this.state.ElementStyle.width,\n            cursor: \"default\"\n          }\n        });\n      }\n    };\n\n    this.handleMouseUp = event => {\n      if (this.props.isSelected) {\n        //console.log('handle mouse up - remove mouse move listener')\n        document.removeEventListener('mousemove', this.handleResize);\n        this.setState({\n          ElementStyle: {\n            left: this.state.ElementStyle.left,\n            top: this.state.ElementStyle.top,\n            height: this.state.ElementStyle.height,\n            width: this.state.ElementStyle.width,\n            cursor: \"move\"\n          }\n        });\n        this.setState({\n          dragModeOn: false,\n          possibleResizeModeOn: false,\n          resizeModeOn: false\n        });\n        document.removeEventListener('mousemove', this.handleDrag);\n\n        if (ReactDOM.findDOMNode(this) !== undefined) {\n          ReactDOM.findDOMNode(this).addEventListener('mousedown', this.handleMouseDown);\n        }\n\n        document.removeEventListener('mouseup', this.handleMouseUp);\n      } else {\n        this.setState({\n          possibleResizeModeOn: false,\n          ElementStyle: {\n            left: this.state.ElementStyle.left,\n            top: this.state.ElementStyle.top,\n            height: this.state.ElementStyle.height,\n            width: this.state.ElementStyle.width,\n            cursor: \"default\"\n          }\n        });\n      }\n    };\n\n    this.handleDrag = event => {\n      if (this.props.isSelected) {\n        this.setState({\n          ElementStyle: {\n            left: this.state.ElementStyle.left,\n            top: this.state.ElementStyle.top,\n            height: this.state.ElementStyle.height,\n            width: this.state.ElementStyle.width,\n            cursor: \"move\"\n          }\n        });\n\n        if (this.state.dragModeOn === true) {\n          this.setState({\n            l: event.pageX - this.state.diffx,\n            t: event.pageY - this.state.diffy\n          });\n          this.setState({\n            ElementStyle: {\n              left: event.pageX - this.state.diffx + \"px\",\n              top: event.pageY - this.state.diffy + \"px\",\n              height: this.state.ElementStyle.height,\n              width: this.state.ElementStyle.width,\n              cursor: \"move\"\n            }\n          });\n          this.props.handleBBoxUpdate(this.state.l, this.state.t, this.state.w, this.state.h, this.props.number);\n        }\n      } else {\n        this.setState({\n          possibleResizeModeOn: false,\n          ElementStyle: {\n            left: this.state.ElementStyle.left,\n            top: this.state.ElementStyle.top,\n            height: this.state.ElementStyle.height,\n            width: this.state.ElementStyle.width,\n            cursor: \"default\"\n          }\n        });\n      }\n    };\n\n    this.state = {\n      ElementStyle: {\n        left: props.l + \"px\",\n        top: props.t + \"px\",\n        width: props.w + \"px\",\n        height: props.h + \"px\",\n        cursor: \"default\"\n      },\n      l: props.l,\n      t: props.t,\n      h: props.h,\n      w: props.w,\n      diffx: 0,\n      diffy: 0,\n      dragModeOn: false,\n      resizeModeOn: false,\n      possibleResizeModeOn: false // if active -> do not drag\n\n    };\n    this.handleResize = this.handleResize.bind(this);\n  }\n\n  render() {\n    // add resize box only to selected element\n    var resizebox;\n\n    if (this.props.isSelected) {\n      resizebox = React.createElement(ResizeBox, {\n        posx: this.state.w - 5 + \"px\",\n        posy: this.state.h - 5 + \"px\",\n        handleResize: this.handleResize,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: this.props.classname,\n      style: this.state.ElementStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, resizebox);\n  }\n\n}\n\nexport default BoundingBox;","map":{"version":3,"sources":["C:/Users/anna_/azuretest/annotation-tool/src/BoundingBox.jsx"],"names":["React","ReactDOM","BoundingBox","Component","constructor","props","componentDidMount","findDOMNode","addEventListener","handleMouseDown","handleDrag","isSelected","componentWillUnmount","removeEventListener","document","handleMouseUp","handleResize","event","console","log","type","setState","resizeModeOn","ElementStyle","left","state","top","height","width","cursor","possibleResizeModeOn","minwidthheight","offset_framearea","w","Math","max","pageX","l","h","pageY","t","handleBBoxUpdate","number","dragModeOn","diffx","diffy","undefined","bind","render","resizebox","classname"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nclass BoundingBox extends React.Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        ElementStyle: {\r\n          left: props.l + \"px\",\r\n          top: props.t + \"px\",\r\n          width: props.w + \"px\",\r\n          height: props.h + \"px\",\r\n          cursor: \"default\",\r\n        },\r\n        l: props.l,\r\n        t: props.t,\r\n        h: props.h,\r\n        w: props.w,\r\n        diffx: 0,\r\n        diffy: 0,\r\n        dragModeOn: false,\r\n        resizeModeOn: false,\r\n        possibleResizeModeOn: false, // if active -> do not drag\r\n      };\r\n  \r\n  \r\n      this.handleResize = this.handleResize.bind(this)\r\n    }\r\n  \r\n    componentDidMount = () => {\r\n  \r\n          ReactDOM.findDOMNode(this).addEventListener('mousedown', this.handleMouseDown); \r\n          ReactDOM.findDOMNode(this).addEventListener('mousemove', this.handleDrag); \r\n  \r\n          //in handle: remove 'mousedown' while mouse down, add when mouse up\r\n          if (this.props.isSelected){\r\n            //console.log('mount selected element ' + this.props.number)\r\n            //ReactDOM.findDOMNode(this).addEventListener('mousedown', this.handleMouseDown); \r\n          }else{\r\n            //console.log('mount un-selected element')\r\n          }\r\n  \r\n          //in handle: remove 'mouseup' while mouse up, add when mouse down\r\n          //in handle: remove 'mousemove' while mouse up, add when mouse down\r\n    }\r\n  \r\n    componentWillUnmount = () => {\r\n      // remove all listeners that are attached to this\r\n      ReactDOM.findDOMNode(this).removeEventListener('mousedown', this.handleMouseDown); \r\n      document.removeEventListener('mouseup', this.handleMouseUp); \r\n      document.removeEventListener('mousemove', this.handleMouseUp); \r\n    }\r\n  \r\n    render() {\r\n      // add resize box only to selected element\r\n  \r\n      var resizebox;\r\n      if (this.props.isSelected) {\r\n        resizebox = (\r\n        <ResizeBox posx={(this.state.w - 5) + \"px\"} posy={(this.state.h - 5) + \"px\"} \r\n        handleResize = {this.handleResize}\r\n        ></ResizeBox>)\r\n      }\r\n  \r\n      return (\r\n        <div className ={this.props.classname} style={this.state.ElementStyle} >\r\n          {resizebox}\r\n        </div>\r\n      );\r\n    }\r\n  \r\n    handleResize = (event) => {\r\n      console.log('handle resize')\r\n      // only if this is the selected bbox\r\n      if(this.props.isSelected){\r\n      if (event.type === 'mousedown'){\r\n        //console.log('clicked: resize me')\r\n  \r\n        // enter resize state\r\n        this.setState({\r\n          resizeModeOn: true,\r\n        });\r\n        this.setState({          \r\n          ElementStyle: {\r\n            left: this.state.ElementStyle.left,\r\n            top: this.state.ElementStyle.top,\r\n            height: this.state.ElementStyle.height,\r\n            width: this.state.ElementStyle.width,\r\n            cursor: \"nw-resize\",\r\n          }\r\n        });\r\n        document.addEventListener('mousemove', this.handleResize); \r\n  \r\n      } else if (event.type === 'mousemove'){\r\n        //console.log('listen for mouse-up')\r\n        document.addEventListener('mouseup', this.handleMouseUp); \r\n        this.setState({          \r\n          ElementStyle: {\r\n            left: this.state.ElementStyle.left,\r\n            top: this.state.ElementStyle.top,\r\n            height: this.state.ElementStyle.height,\r\n            width: this.state.ElementStyle.width,\r\n            cursor: \"nw-resize\",\r\n          }\r\n        });\r\n  \r\n        this.setState({ \r\n          possibleResizeModeOn: true, \r\n        });\r\n        if (this.state.resizeModeOn){\r\n          var minwidthheight = 5;\r\n          var offset_framearea = 100;\r\n  \r\n          // stop if width/height == 0\r\n          if (this.state.w >= minwidthheight){\r\n            // add mouse-position to width\r\n            this.setState({\r\n              w: Math.max(minwidthheight,event.pageX - this.state.l - offset_framearea),\r\n            });\r\n      \r\n            this.setState({          \r\n              ElementStyle: {\r\n                left: this.state.ElementStyle.left,\r\n                top: this.state.ElementStyle.top,\r\n                height: this.state.ElementStyle.height,\r\n                width: (this.state.w) + \"px\",\r\n                cursor: \"nw-resize\",\r\n              }\r\n            });\r\n          }\r\n          if (this.state.h >= minwidthheight){\r\n              // add mouse-position to height\r\n              this.setState({\r\n                h: Math.max(minwidthheight, event.pageY - this.state.t - offset_framearea),\r\n              });\r\n        \r\n              this.setState({          \r\n                ElementStyle: {\r\n                  left: this.state.ElementStyle.left,\r\n                  top: this.state.ElementStyle.top,\r\n                  height: (this.state.h) + \"px\",\r\n                  width: this.state.ElementStyle.width,\r\n                  cursor: \"nw-resize\",\r\n                }\r\n              });\r\n            }\r\n  \r\n  \r\n            // only pass changed values to parent\r\n            this.props.handleBBoxUpdate(this.state.l,this.state.t,this.state.w,this.state.h, this.props.number); \r\n        }\r\n      } else if (event.type === \"mouseout\") {\r\n        this.setState({\r\n          possibleResizeModeOn: false,\r\n          ElementStyle: {\r\n            left: this.state.ElementStyle.left,\r\n            top: this.state.ElementStyle.top,\r\n            height: this.state.ElementStyle.height,\r\n            width: this.state.ElementStyle.width,\r\n            cursor: \"move\",\r\n          }\r\n        });\r\n        \r\n      }\r\n      } else {\r\n        this.setState({\r\n          possibleResizeModeOn: false,\r\n          ElementStyle: {\r\n            left: this.state.ElementStyle.left,\r\n            top: this.state.ElementStyle.top,\r\n            height: this.state.ElementStyle.height,\r\n            width: this.state.ElementStyle.width,\r\n            cursor: \"default\",\r\n          }\r\n        });\r\n      }\r\n    }\r\n  \r\n    handleMouseDown = (event) => {\r\n        // only if this is the selected bbox\r\n        if(this.props.isSelected){\r\n          //check if resize is on\r\n          // if click is inside resize-box -> resize\r\n          // otherwise -> drag\r\n  \r\n          if (this.state.possibleResizeModeOn === false){\r\n            this.setState({\r\n              dragModeOn: true,\r\n              diffx: event.pageX - this.state.l,\r\n              diffy: event.pageY - this.state.t,\r\n            });\r\n            document.addEventListener('mousemove', this.handleDrag);\r\n            ReactDOM.findDOMNode(this).removeEventListener('mousedown', this.handleMouseDown);\r\n            document.addEventListener('mouseup', this.handleMouseUp); \r\n          }\r\n      } else {\r\n        this.setState({\r\n          possibleResizeModeOn: false,\r\n          ElementStyle: {\r\n            left: this.state.ElementStyle.left,\r\n            top: this.state.ElementStyle.top,\r\n            height: this.state.ElementStyle.height,\r\n            width: this.state.ElementStyle.width,\r\n            cursor: \"default\",\r\n          }\r\n        });\r\n      }\r\n     }\r\n  \r\n     handleMouseUp = (event) => {\r\n      if(this.props.isSelected){\r\n        //console.log('handle mouse up - remove mouse move listener')\r\n        document.removeEventListener('mousemove', this.handleResize); \r\n          this.setState({          \r\n            ElementStyle: {\r\n              left: this.state.ElementStyle.left,\r\n              top: this.state.ElementStyle.top,\r\n              height: this.state.ElementStyle.height,\r\n              width: this.state.ElementStyle.width,\r\n              cursor: \"move\",\r\n            }\r\n          });\r\n  \r\n          this.setState({\r\n            dragModeOn: false,\r\n            possibleResizeModeOn: false, \r\n            resizeModeOn: false,\r\n          }); \r\n          document.removeEventListener('mousemove', this.handleDrag); \r\n          \r\n          if (ReactDOM.findDOMNode(this) !== undefined){\r\n            ReactDOM.findDOMNode(this).addEventListener('mousedown', this.handleMouseDown);\r\n          }\r\n          document.removeEventListener('mouseup', this.handleMouseUp);\r\n      } else {\r\n        this.setState({\r\n          possibleResizeModeOn: false,\r\n          ElementStyle: {\r\n            left: this.state.ElementStyle.left,\r\n            top: this.state.ElementStyle.top,\r\n            height: this.state.ElementStyle.height,\r\n            width: this.state.ElementStyle.width,\r\n            cursor: \"default\",\r\n          }\r\n        });\r\n      }\r\n     }\r\n  \r\n     handleDrag = (event) => {\r\n      if(this.props.isSelected){\r\n        this.setState({          \r\n          ElementStyle: {\r\n            left: this.state.ElementStyle.left,\r\n            top: this.state.ElementStyle.top,\r\n            height: this.state.ElementStyle.height,\r\n            width: this.state.ElementStyle.width,\r\n            cursor: \"move\",\r\n          }\r\n        });\r\n        if (this.state.dragModeOn === true) {\r\n          this.setState({\r\n            l: event.pageX - this.state.diffx,\r\n            t: event.pageY - this.state.diffy,\r\n          });\r\n  \r\n          this.setState({\r\n            ElementStyle: {\r\n              left: (event.pageX - this.state.diffx) + \"px\",\r\n              top: (event.pageY - this.state.diffy) + \"px\",\r\n              height: this.state.ElementStyle.height,\r\n              width: this.state.ElementStyle.width,\r\n              cursor: \"move\",\r\n            }\r\n          });\r\n          this.props.handleBBoxUpdate(this.state.l,this.state.t,this.state.w,this.state.h, this.props.number); \r\n        }\r\n      }else {\r\n        this.setState({\r\n          possibleResizeModeOn: false,\r\n          ElementStyle: {\r\n            left: this.state.ElementStyle.left,\r\n            top: this.state.ElementStyle.top,\r\n            height: this.state.ElementStyle.height,\r\n            width: this.state.ElementStyle.width,\r\n            cursor: \"default\",\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  \r\n  export default BoundingBox;"]},"metadata":{},"sourceType":"module"}